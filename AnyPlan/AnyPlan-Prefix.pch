//
// Prefix header for all source files of the 'AnyPlan' target in the 'AnyPlan' project
//

#import <Availability.h>

#ifndef __IPHONE_5_0
#warning "This project uses features only available in iOS SDK 5.0 and later."
#endif

#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
    #import <CoreData/CoreData.h>
    #import <QuartzCore/QuartzCore.h>
    #import <Parse/Parse.h>
    #import "Project.h"
    #import "Project+Additions.h"
    #import "Task.h"
    #import "Task+Additions.h"
    #import "Repeat.h"
    #import "Repeat+Additions.h"
    #import "Note.h"
    #import "Note+Additions.h"
    #import "AppDelegate.h"
    #import "UIImage+Additions.h"
    #import "EditableCell.h"
    #import "ProjectCell.h"
    #import "NoteCell.h"
    #import "TaskCell.h"
    #import "NavigationBarTitleWithSubtitleView.h"
    #import "CustomTabBarController.h"
    #import "UIColor+ColorWithHex.h"
    #import "MBProgressHUD.h"



#endif

/*Common*/
#define APPDELEGATE (AppDelegate *)[[UIApplication sharedApplication] delegate]
#define kColorHexForDefaultProjectIcon @"a8a8a8"
#define kImageNameForDefaultProjectIcon @"flag"
#define kLengthForDefaultProjectIcon 60
#define kImageNameForAllProjectIcon @"infinity"
#define kImageNameForInboxProjectIcon @"inbox_with_background"

#define LOG(...) NSLog(__VA_ARGS__)
#define LOG_PRINTF(FORMAT, ...) printf("%s\n", [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);
#define LOG_METHOD NSLog(@"%s", __func__)
#define LOG_METHOD_AND_ABORT LOG_METHOD; abort()
#define LOG_POINT(p, comment) NSLog(@"%@:%f, %f", comment, p.x, p.y)
#define LOG_SIZE(p, comment) NSLog(@"%@:%f, %f", comment, p.width, p.height)
#define LOG_RECT(p, comment) NSLog(@"%@:%f, %f - %f, %f", comment, p.origin.x, p.origin.y, p.size.width, p.size.height)
#define LOG_BOOL(bool, comment)  NSLog(@"%@:%@",comment,(bool ? @"YES":@"NO"))
#define LOG_DATE(date, comment)  NSLog(@"%@:%@",comment,[date description])

/*
#ifdef DEBUG
    #define LOG(...) NSLog(__VA_ARGS__)
    #define LOG_PRINTF(FORMAT, ...) printf("%s\n", [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);
    #define LOG_METHOD NSLog(@"%s", __func__)
    #define LOG_METHOD_AND_ABORT LOG_METHOD; abort()
#else
    #define LOG(...)
    #define LOG_PRINTF(FORMAT, ...)
    #define LOG_METHOD
    #define LOG_METHOD_AND_ABORT
#endif

#ifdef DEBUG
    #define LOG_POINT(p) NSLog(@"%f, %f", p.x, p.y)
    #define LOG_SIZE(p) NSLog(@"%f, %f", p.width, p.height)
    #define LOG_RECT(p) NSLog(@"%f, %f - %f, %f", p.origin.x, p.origin.y, p.size.width, p.size.height)
#else
    #define LOG_POINT(p)
    #define LOG_SIZE(p)
    #define LOG_RECT(p)
#endif
*/